---
interface Props {
  name: string;
  image: ImageMetadata;
  modalId: string;
}

import { Image } from "astro:assets";
const { name, image, modalId } = Astro.props;
---

<div id={modalId} class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
  <div class="fixed inset-0 flex items-center justify-center p-4">
    <div class="bg-white rounded-lg max-w-2xl w-full mx-auto p-8 relative" onclick="event.stopPropagation();">
      <button
        onclick="closeModal()"
        class="absolute top-4 right-4 text-gray-500 hover:text-gray-700"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"
          ></path>
        </svg>
      </button>

      <div class="flex flex-col md:flex-row gap-8">
        <div class="md:w-1/3">
          <Image
            src={image}
            alt={name}
            width={400}
            format="avif"
            class="w-full rounded-lg shadow-lg"
          />
        </div>
        <div class="md:w-2/3">
          <h2 class="text-3xl font-yesteryear mb-4">{name}</h2>
          <div class="prose">
            <p>
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do
              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim
              ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut
              aliquip ex ea commodo consequat.
            </p>
            <p>
              Duis aute irure dolor in reprehenderit in voluptate velit esse
              cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
              cupidatat non proident, sunt in culpa qui officia deserunt mollit
              anim id est laborum.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script is:inline>
  // Close modal function
  window.closeModal = function() {
    document.querySelectorAll('[id^="modal-"]').forEach(modal => {
      modal.classList.add('hidden');
    });
    document.body.style.overflow = 'auto';
  }

  // Add click handlers after the DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    // Close modal when clicking outside
    document.querySelectorAll('[id^="modal-"]').forEach(modal => {
      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          closeModal();
        }
      });
    });

    // Close modal with escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeModal();
      }
    });
  });
</script> 